---
version: "3.7"

services:
  frontend:
    container_name: frontend
    build:
      context: ./front
      dockerfile: Dockerfile
    environment:
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - "./front:/app"
      - "/app/node_modules"
    depends_on:
      - "backend"

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    links:
      - db
    environment:
      - CHOKIDAR_USEPOLLING=true
      - PGHOST=db
      - PGDATABASE=stage
      - PGUSER=postgres
      - PGPASSWORD=secret
    volumes:
      - "./backend:/app"
      - "/app/node_modules"
    restart: always
    depends_on:
      db:
        condition: service_healthy

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - 80:80
    depends_on:
      - "frontend"

  db:
    container_name: db
    image: postgres:10.5
    environment:
      - PGDATA=/var/lib/postgresql/data/app/
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=postgres
      - POSTGRES_DB=stage
    volumes:
      - ./database/postgres-data:/var/lib/postgresql/data/app
      - ./database/scripts:/docker-entrypoint-initdb.d
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d stage"]
      interval: 10s
      timeout: 5s
      retries: 5
